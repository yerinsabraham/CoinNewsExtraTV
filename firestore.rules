rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Live comments: public reads, authenticated creates
    match /live_comments/{commentId} {
      allow read: if true;
      allow create: if request.auth != null
        && request.resource.data.keys().hasAll(['videoId','userId','username','message','timestamp'])
        && request.resource.data.userId == request.auth.uid
        && request.resource.data.videoId is string
        && request.resource.data.username is string
        && request.resource.data.message is string
        && request.resource.data.message.size() <= 1000;
      allow update, delete: if false;
    }

    // Users and subcollections: users only access their own documents
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null && request.auth.uid == userId;

      match /social_verifications/{platform} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
      match /social_claims/{claimId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
      match /transactions/{transactionId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
        allow create: if request.auth != null && request.auth.uid == userId;
      }
      match /wallets/{walletId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
      match /rewards/{rewardId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
      match /token_locks/{lockId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }

      // earnings subcollection
      match /earnings/{earningId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
        allow create: if request.auth != null && request.auth.uid == userId;
      }
    }

    // General collections
    match /rooms/{roomId} { allow read: if request.auth != null; allow create: if request.auth != null; allow update: if request.auth != null; allow delete: if false; }
    match /rounds/{roundId} { allow read: if request.auth != null; allow create: if request.auth != null; allow update: if request.auth != null; }
    match /joins/{joinId} { allow read: if request.auth != null && request.auth.uid == resource.data.uid; allow create: if request.auth != null && request.auth.uid == request.resource.data.uid; }
    match /timedRounds/{roundId} { allow read: if request.auth != null; allow create: if request.auth != null; allow update: if request.auth != null; }

    // System and read-only collections for authenticated users
    match /battle_results/{id} { allow read: if request.auth != null; allow write: if false; }
    match /videos/{id} { allow read: if request.auth != null; allow write: if false; }
    match /live_videos/{id} { allow read: if request.auth != null; allow write: if false; }
    match /system/{id} { allow read: if request.auth != null; allow write: if false; }
    match /reward_config/{id} { allow read: if request.auth != null; allow write: if false; }
    match /stats/{id} { allow read: if request.auth != null; allow write: if false; }

    match /referral_codes/{codeId} { allow read: if request.auth != null; allow create: if request.auth != null && request.auth.uid == request.resource.data.createdBy; allow update: if request.auth != null && request.auth.uid == resource.data.createdBy; }

    match /admins/{adminId} { allow read: if request.auth != null; allow create: if request.auth != null && request.auth.uid == adminId; allow update: if request.auth != null && request.auth.email in ['yerinssaibs@gmail.com', 'elitepr@coinnewsextra.com']; allow delete: if false; }

    match /admin_notifications/{notificationId} { allow read: if request.auth != null; allow create: if request.auth != null; allow update: if request.auth != null; allow delete: if request.auth != null && request.auth.email in ['yerinssaibs@gmail.com', 'elitepr@coinnewsextra.com']; }

    match /chat_messages/{messageId} { allow read: if request.auth != null; allow create: if request.auth != null && request.auth.uid == request.resource.data.userId; allow update, delete: if false; }

    match /usernames/{username} { allow read: if request.auth != null; allow create: if request.auth != null; allow update: if false; allow delete: if false; }

    match /rewards_log/{logId} { allow read: if request.auth != null && request.auth.uid == resource.data.uid; allow create: if false; allow update, delete: if false; }
    match /redemptions/{id} { allow read: if request.auth != null && request.auth.uid == resource.data.uid; allow create: if request.auth != null && request.auth.uid == request.resource.data.uid; allow update, delete: if false; }
    match /pending_transfers/{id} { allow read: if request.auth != null && request.auth.uid == resource.data.uid; allow create: if request.auth != null && request.auth.uid == request.resource.data.uid; allow update, delete: if false; }
    match /admin_actions/{id} { allow read: if request.auth != null; allow write: if false; }

    match /custodial_wallets/{userId} { allow read, write: if request.auth != null && request.auth.uid == userId; allow create: if request.auth != null && request.auth.uid == userId; }
    match /token_associations/{id} { allow read: if request.auth != null; allow create: if request.auth != null; allow update, delete: if false; }
    match /wallet_funding/{id} { allow read: if request.auth != null; allow create: if request.auth != null; allow update, delete: if false; }
    match /wallet_audit_log/{id} { allow read: if request.auth != null; allow create: if request.auth != null; allow update, delete: if false; }
    match /user_balances/{userId} { allow read, write: if request.auth != null && request.auth.uid == userId; allow create: if request.auth != null && request.auth.uid == userId; }
    match /reward_logs/{rewardId} { allow read: if request.auth != null && request.auth.uid == resource.data.userId; allow create: if request.auth != null; allow update, delete: if false; }
    match /transfer_log/{id} { allow read: if request.auth != null; allow create: if request.auth != null; allow update, delete: if false; }
    match /admin_log/{id} { allow read: if request.auth != null; allow create: if request.auth != null; allow update, delete: if false; }

    // Support system
    match /support_tickets/{ticketId} {
      allow read: if request.auth != null && (request.auth.uid == resource.data.userId || request.auth.email in ['yerinssaibs@gmail.com', 'elitepr@coinnewsextra.com']);
      allow list: if request.auth != null && request.auth.email in ['yerinssaibs@gmail.com', 'elitepr@coinnewsextra.com'];
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
      allow update: if request.auth != null && (request.auth.uid == resource.data.userId || request.auth.email in ['yerinssaibs@gmail.com', 'elitepr@coinnewsextra.com']);
    }

    match /support_chats/{chatId} {
      allow read: if request.auth != null && (request.auth.uid == resource.data.userId || request.auth.email in ['yerinssaibs@gmail.com', 'elitepr@coinnewsextra.com']);
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
      allow update: if request.auth != null && (request.auth.uid == resource.data.userId || request.auth.email in ['yerinssaibs@gmail.com', 'elitepr@coinnewsextra.com']);
      allow delete: if request.auth != null && (request.auth.uid == resource.data.userId || request.auth.email in ['yerinssaibs@gmail.com', 'elitepr@coinnewsextra.com']);
    }

    match /support_calls/{callId} {
      allow read: if request.auth != null && (request.auth.uid == resource.data.userId || request.auth.email in ['yerinssaibs@gmail.com', 'elitepr@coinnewsextra.com']);
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
      allow update: if request.auth != null && (request.auth.uid == resource.data.userId || request.auth.email in ['yerinssaibs@gmail.com', 'elitepr@coinnewsextra.com']);
    }

    match /support_chats/{chatId}/messages/{messageId} { allow read: if request.auth != null; allow create: if request.auth != null; allow update: if false; allow delete: if request.auth != null; }

    match /spotlight_items/{itemId} {
      allow read: if request.auth != null && resource.data.isActive == true;
      allow read: if request.auth != null && request.auth.email in ['yerinssaibs@gmail.com', 'elitepr@coinnewsextra.com'];
      allow create, update, delete: if request.auth != null && request.auth.email in ['yerinssaibs@gmail.com', 'elitepr@coinnewsextra.com'];
    }

    match /quiz_progress/{progressId} { allow read: if request.auth != null && request.auth.uid == resource.data.userId; allow create: if request.auth != null && request.auth.uid == request.resource.data.userId; allow update, delete: if false; }
  }
}
